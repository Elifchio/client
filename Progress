
# general explanation 
Task Summary: Lead Conversion Prediction Model
Objective: Build a neural network to predict customer conversion probability for leads that have successfully completed the booking call process.
Dataset:
‚Ä¢	40,000 leads (lead-level analysis)
‚Ä¢	Population: Leads that completed booking calls and got sales calls scheduled (request created)
‚Ä¢	Target variable: CONTRACT_SIGNED
‚Ä¢	Conversion rate: 470/40k = 1.2% (highly imbalanced)
Sales Process Flow:
1.	Lead created (LEAD_CREATION_DATE)
2.	Booking call attempts: BC_1, BC_2, BC_3... BC_18 (with corresponding outcomes)
3.	Sales call scheduled: SC1_SCHEDULED
4.	Request created (after successful booking)
5.	Sales call appointment: SC1_APPOINTMENT
6.	Follow-up stages: IPA, installation, etc.
7.	Final outcome: CONTRACT_SIGNED (target)
Key Features Available:
‚Ä¢	Booking call patterns: Number of BC attempts, outcomes (NOTREACHED, LOST, VDTOPLAN, TOBERECALLED, NOSHOWNOTREACHED, etc.)
‚Ä¢	Timing data: Gaps between stages, time from lead creation to SC1
‚Ä¢	Engagement quality: Outcome types indicating interest level
‚Ä¢	Show-up behavior: No-show patterns vs successful contacts
Approach: Start with thorough data preparation and feature engineering before model architecture, focusing on extracting meaningful patterns from the booking call attempts and timing behaviors that predict post-sales-call conversion.

# created features 

Explanation of created features; 
Feature Categories Created:

Booking Call Efficiency (4 features)

Total BC attempts and outcomes
BC duration and frequency


Temporal Features (5 features)

Time gaps between key events
Call frequency patterns


Engagement Quality (7 features)

Outcome ratios by category (positive, negative, no-show, reachability)
Based on your outcome types (VDTOPLAN, LOST, NOTREACHED, etc.)


Behavioral Patterns (4 features)

First/last BC outcomes
Improvement/deterioration trends
Persistence after negative outcomes


Composite Scores (2 features)

Overall engagement score (weighted combination)
Efficiency score (scheduling with fewer attempts)

# first chat 

Lead Conversion Prediction - Progress Summary
Dataset

38,367 leads (lead-level analysis)
490 conversions (1.28% conversion rate - highly imbalanced)
Leads that completed booking calls and got sales calls scheduled

Feature Engineering Completed
Created 24 features from raw booking call data:
1. Booking Call Efficiency (4 features)

total_bc_attempts, total_bc_outcomes, bc_duration_days, bc_frequency

2. Temporal Features (5 features)

lead_to_first_bc_days, lead_to_sc1_days, sc1_schedule_to_appointment_days, etc.

3. Engagement Quality (7 features)

Outcome ratios: positive_outcome_ratio, negative_outcome_ratio, reachability_score, etc.

4. Behavioral Patterns (4 features)

outcome_trend, persistence_after_negative, encoded BC outcomes

5. Composite Scores (2 features)

engagement_score, efficiency_score

Key Insights

Converters need fewer BC attempts: 1.95 vs 3.44 average
Converters have higher engagement: 0.69 vs 0.59 score
Clean data with no missing values

Data Status

All features engineered and encoded (categorical features label-encoded)
Ready for train/test split and imbalance handling
Next steps: Handle class imbalance (SMOTE/class weights), then neural network architecture

# second chat 

Lead Conversion Prediction Model - Complete Summary
üéØ Project Overview
Objective: Build a neural network to predict customer conversion probability for leads that completed booking calls

Dataset: 38,367 leads with 490 conversions (1.28% conversion rate - highly imbalanced)
Target: CONTRACT_SIGNED binary classification
Population: Leads that completed booking calls and got sales calls scheduled

üìä Sales Process Flow

Lead created (LEAD_CREATION_DATE)
Booking call attempts: BC_1, BC_2, BC_3... BC_18 (with outcomes)
Sales call scheduled: SC1_SCHEDULED
Request created (after successful booking)
Sales call appointment: SC1_APPOINTMENT
Final outcome: CONTRACT_SIGNED (target)

üîß Feature Engineering (Pre-Chat)
Created 24 features from raw booking call data:

Booking Call Efficiency: total_bc_attempts, bc_duration_days, bc_frequency
Temporal Features: lead_to_first_bc_days, sc1_schedule_to_appointment_days
Engagement Quality: positive_outcome_ratio, reachability_score
Behavioral Patterns: outcome_trend, persistence_after_negative
Composite Scores: engagement_score, efficiency_score

ü§ñ Model Implementation
Class Imbalance Handling

Method Used: SMOTE (Synthetic Minority Oversampling)
Training Data: 30,693 ‚Üí 60,602 samples (balanced 50/50)
Why SMOTE: Best for very low conversion rates, creates realistic synthetic examples

Neural Network Architecture
- Input: 23 features (removed 2 zero-variance features)
- Layer 1: 128 neurons + BatchNorm + Dropout(0.4)
- Layer 2: 64 neurons + BatchNorm + Dropout(0.3) 
- Layer 3: 32 neurons + Dropout(0.2)
- Layer 4: 16 neurons
- Output: 1 neuron (sigmoid)
- Total Parameters: 14,721
Training Setup

Optimizer: Adam (lr=0.001)
Loss: Binary crossentropy
Callbacks: EarlyStopping (patience=15)
Scaling: StandardScaler on features

üìà Model Performance
Core Metrics

ROC-AUC: 0.81 (Excellent - above 0.75 is very good for this problem)
Accuracy: 81% on test set
Test Set: 7,674 real leads, 98 real conversions

Optimal Threshold Analysis
Best Threshold: 0.4 (instead of default 0.5)

Precision: 4.4% (1 in 23 predicted leads converts)
Recall: 80.6% (catches 4 out of 5 actual converters)
F1-Score: 0.084 (best balance)

üí° Key Business Insights
Top Predictive Features

sc1_to_conversion_days (0.348 correlation) - Time kills deals
last_bc_outcome_encoded (0.123) - How booking calls end matters
showed_up_sc1 (0.096) - Attendance predicts conversion
engagement_score (0.081) - Your composite metric works

Critical Patterns Discovered

Converters convert fast: 4.08 days average vs 0.00 for non-converters
Show-up rate: Converters 53% vs non-converters 20% (2.6x difference)
Engagement: Converters 0.69 vs non-converters 0.59 score

üöÄ Business Impact
Efficiency Gains

Before: Call all 7,674 leads ‚Üí find 98 conversions (1.3% rate)
After: Call 1,788 high-probability leads ‚Üí find ~79 conversions (4.4% rate)
Result: 4.3x fewer calls, 3.4x higher conversion rate

Deployment Strategy

Score all new leads with the model
Use 0.4 threshold for high-priority classification
Focus sales effort on top predictions
Monitor and retrain monthly

üîß Technical Notes

Data Quality: Removed 2 zero-variance features (noshow metrics)
Validation: All results based on real data only (SMOTE only for training)
Scalability: Model ready for production deployment
Monitoring: Track actual vs predicted conversion rates

üìù Next Steps for New Chat

Model Deployment: Implement scoring pipeline for new leads
Feature Monitoring: Track feature drift over time
Model Updates: Retrain with new data monthly
Business Rules: Combine model scores with business logic
A/B Testing: Compare model-guided vs traditional approaches

# obervation
during feature enineerin it was necessary to put attention ot to create data leakage (i.e sc1 to conversion)